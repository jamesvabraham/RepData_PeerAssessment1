ActivityDB <- read.csv("activity.csv")
DailySteps <- tapply(ActivityDB$steps,ActivityDB$date,sum,na.rm=FALSE)
hist(DailySteps,main="Histogram of Daily Steps",ylab = "Number of Days",xlab = "Daily Steps",breaks = 10,xaxt="n")
axis(side=1, at=seq(0,25000, 2000), labels=seq(0,25000,2000))
average <- round(mean(DailySteps,na.rm=TRUE))
middle <- median(DailySteps,na.rm=TRUE)
IntervalSteps <- tapply(ActivityDB$steps,ActivityDB$date,mean,na.rm=TRUE)
plot(IntervalSteps,type = "l", main = "Steps Across Interval in a Day", xlab = "5min Time Interval", ylab = "Steps during Interval")
IntervalSteps <- tapply(ActivityDB$steps,ActivityDB$interval,mean,na.rm=TRUE)
plot(IntervalSteps,type = "l", main = "Steps Across Interval in a Day", xlab = "5min Time Interval", ylab = "Steps during Interval")
plot(as.integer(names(IntervalSteps),IntervalSteps,type = "l", main = "Steps Across Interval in a Day", xlab = "5min Time Interval", ylab = "Steps during Interval")
plot(as.integer(names(IntervalSteps)),IntervalSteps,type = "l", main = "Steps Across Interval in a Day", xlab = "5min Time Interval", ylab = "Steps during Interval")
axis(side=1, at=seq(0,2500, 250), labels=seq(0,2500,250))
axis(side=1, at=seq(0,2500, 250), labels=seq(0,2500,100))
axis(side=1, at=seq(0,2500, 100), labels=seq(0,2500,100))
plot(as.integer(names(IntervalSteps)),IntervalSteps,type = "l", main = "Steps Across Interval in a Day", xlab = "5min Time Interval", ylab = "Steps during Interval",xaxt="n")
axis(side=1, at=seq(0,2500, 100), labels=seq(0,2500,100))
names(IntervalSteps)[IntervalSteps == max(IntervalSteps)]
sum(ActivityDB$steps == NA)
sum(ActivityDB$steps == "NA")
head(ActivityDB)
str(ActivityDB)
ActivityDB$steps == NA
is.na(ActivityDB$steps)
sum(is.na(ActivityDB$steps))
head(DailySteps)
sum(is.na(DailySteps))
daysofNA <- is.na(DailySteps)
sum(IntervalSteps)
library(data.table)
?setDT
ActivityDT <- as.data.table(ActivityDB)
head(ActivityDT)
ActivityDT <- as.data.table(ActivityDB,key = date)
str(ActivtyDB)
str(ActivityDB)
class(ActivityDB$date)
ActivityDT <- as.data.table(ActivityDB,key = Activity$date)
ActivityDT <- as.data.table(ActivityDB,key = ActivityDB$date)
library(tidyr)
ActivityDT <- spread(ActivityDB,interval,steps)
head(ActivityDT)
colnames(ActivityDT)
rownames(ActivityDT)
rownames(ActivityDT$date)
rownames(ActivityDT) < ActivityDT$date
rownames(ActivityDT) <- ActivityDT$date
rownames(ActivityDT)
head(ActivityDT)
ActivityDT <- ActivityDT[,-1]
head(ActivityDT)
ActivityDT[daysofNA,] <- IntervalSteps
ActivityDT
IntervalSteps <- tapply(ActivityDB$steps,ActivityDB$interval,mean,na.rm=TRUE)
head(IntervalSteps)
ActivityDT[1,]
ActivityDT[1,] <- IntervalSteps
ActivityDT[1,]
ActivityDT <- spread(ActivityDB,interval,steps)
ActivityDT[1,c(1:4)]
rownames(ActivityDT) <- ActivityDT$date
ActivityDT <- ActivityDT[,-1]
ActivityDT[1,c(1:4)]
IntervalSteps
IntervalSteps(c(1:4))
IntervalSteps[c(1:4)]
ActivityDT[daysofNA,]
ActivityDT["2012-10-08",c(1:4)]
ActivityDT[daysofNA,] <- IntervalSteps
ActivityDT["2012-10-08",c(1:4)]
ActivityDT["2012-11-01",c(1:4)]
ActivityDT <- spread(ActivityDB,interval,steps)
rownames(ActivityDT) <- ActivityDT$date
ActivityDT <- ActivityDT[,-1]
ActivityDT["2012-10-02",c(1:4)]
ActivityDT["2012-10-07",c(1:4)]
ActivityDT[daysofNA,] <- IntervalSteps
ActivityDT["2012-10-07",c(1:4)]
ActivityDT["2012-10-02",c(1:4)]
ActivityDT["2012-10-01",c(1:4)]
for (i in daysofNA) {ActivityDT[i,] <- IntervalSteps}
ActivityDT["2012-10-01",c(1:4)]
ActivityDT["2012-10-02",c(1:4)]
ActivityDT[1,]
Activity[,2]
ActivityDT[,2]
ActivityDT <- spread(ActivityDB,interval,steps)
rownames(ActivityDT) <- ActivityDT$date
ActivityDT <- ActivityDT[,-1]
ActivityDT[,2]
ActivityDT[1,] <- IntervalSteps
ActivityDT[,2]
ActivityDT[,1]
ActivityDT[,3]
ActivityDT[which(daysofNA),] <- IntervalSteps
ActivityDT[,3]
ActivityDT[,1]
ActivityDT <- spread(ActivityDB,interval,steps)
rownames(ActivityDT) <- ActivityDT$date
ActivityDT <- ActivityDT[,-1]
ActivityDT[,1]
for (i in which(daysofNA)) {ActivityDT[i,] <- IntervalSteps}
ActivityDT[,1]
ActivityDT[,2]
sum(ActivityDT == NA)
sum(ActivityDT)
sum(is.na(ActivityDT))
ActvitiyDBnew <- melt(ActivityDT)
ActvitiyDBnew <- melt(as.data.table(ActivityDT))
rm(ActvitiyDBnew)
ActivityDBnew <- melt(as.data.table(ActivityDT))
head(ActivityDBnew)
?gather
?pivot_longer
ActivityDBnew <- pivot_longer(ActivityDT,cols = everything(),names_to = "interval",values_to = "steps")
head(ActivityDBnew)
head(ActivityDT)
ActivityDT <- cbind(rownames(ActivityDT),ActivityDT)
head(ActivityDT)
ActivityDT <- ActivityDT[,-1]
?cbind
ActivityDT <- cbind(rownames(ActivityDT),ActivityDT)
colnames(ActivityDT[,1]) <- "date"
colnames(ActivityDT) <- c("date",colnames(ActivityDT[,-1])
)
head(ActivityDT)
ActivityDBnew <- pivot_longer(ActivityDT,cols = !1,names_to = "interval",values_to = "steps")
head(ActivityDBnew)
head(ActivityDB)
?weekday
?weekdays
weekdays(ActivityDBnew$date[1])
weekdays(as.date(ActivityDBnew$date[1])
)
weekdays(as.Date(ActivityDBnew$date[1]),%Y/%m/%d)
weekdays(as.Date(ActivityDBnew$date[1],%Y/%m/%d))
as.Date(ActivityDBnew$date[1],%Y/%m/%d)
as.Date(ActivityDBnew$date[1],%Y%m%d)
?as.Date
as.Date(ActivityDBnew$date[1])
weekdays(as.Date(ActivityDBnew$date[1]))
?if
)
dayType <- if (weekdays(as.Date(ActivityDBnew$date)) == "Sunday" | weekdays(as.Date(ActivityDBnew$date)) == "Saturday") {"weekend"} else {"weekday"}
dayType <- ifelse ((weekdays(as.Date(ActivityDBnew$date)) == "Sunday" | weekdays(as.Date(ActivityDBnew$date)) == "Saturday"),"weekend", "weekday")
dayType
weekdays(as.Date(ActivityDBnew$date[6]))
weekdays(as.Date(ActivityDBnew$date[2]))
weekdays(as.Date(ActivityDBnew$date[4]))
?weekdays
weekdays(as.Date(ActivityDBnew$date[4]),abbreviate = TRUE)
weekdays(as.Date(ActivityDBnew$date[2]),abbreviate = TRUE)
weekdays(as.Date(ActivityDBnew$date[1000]),abbreviate = TRUE)
cbind(ActivityDBnew,dayType)
ActivityDBnew <- cbind(ActivityDBnew,dayType)
library(ggplot2)
qplot
qplot(interval,tapply(ActivityDBnew$steps,ActivityDBnew$interval,mean,na.rm=TRUE),data=ActivityDBnew,facets = .~ dayType)
qplot(interval,tapply(unique(ActivityDBnew$steps),ActivityDBnew$interval,mean,na.rm=TRUE),data=ActivityDBnew,facets = .~ dayType)
qplot(unique(interval),tapply(ActivityDBnew$steps,ActivityDBnew$interval,mean,na.rm=TRUE),data=ActivityDBnew,facets = .~ dayType)
qplot(unique(interval),tapply(steps,interval,mean,na.rm=TRUE),data=ActivityDBnew,facets = .~ dayType)
library(dplyr)
?group_by
SummTable <- group_by(ActivityDBnew,dayType,interval)
SummOut <- summarize(SummTable,avgSteps = mean(steps,na.rm=TRUE))
SummOut
unique(SummOut$interval)
SummOut <- SummOut[order(SummOut$interval),]
head(SummOut)
SummOut$interval <- as.numeric(SummOut$interval)
SummOut <- SummOut[order(SummOut$interval),]
head(SummOut)
qplot(interval,avgSteps,data = SummOut,facets = .~ dayType)
qplot(interval,avgSteps,data = SummOut,facets = .~ dayType,main = "Average Steps in Interval (Weekday vs Weekend)", ylab = "Average Number of Steps",xlab = "Interval")
?qplot
qplot(interval,avgSteps,data = SummOut,facets = .~ dayType,main = "Average Steps in Interval (Weekday vs Weekend)", ylab = "Average Number of Steps",xlab = "Interval",geom = c("points","line"))
qplot(interval,avgSteps,data = SummOut,facets = .~ dayType,main = "Average Steps in Interval (Weekday vs Weekend)", ylab = "Average Number of Steps",xlab = "Interval",geom = "line"))
qplot(interval,avgSteps,data = SummOut,facets = .~ dayType,main = "Average Steps in Interval (Weekday vs Weekend)", ylab = "Average Number of Steps",xlab = "Interval",geom = c("point","line"))
qplot(interval,avgSteps,data = SummOut,facets = .~ dayType,main = "Average Steps in Interval (Weekday vs Weekend)", ylab = "Average Number of Steps",xlab = "Interval",geom = c("line"))
grouped <- group_by(ActivityDBnew,dayType,interval)
SummOut <- summarize(grouped,avgSteps = mean(steps,na.rm=TRUE))
qplot(interval,avgSteps,data = SummOut,facets = .~ dayType,main = "Average Steps in Interval (Weekday vs Weekend)", ylab = "Average Number of Steps",xlab = "Interval",geom = c("line"))
qplot(interval,avgSteps,data = SummOut,facets = .~ dayType,main = "Average Steps in Interval (Weekday vs Weekend)", ylab = "Average Number of Steps",xlab = "Interval",geom = c("line"))
